# Generated by Django 4.0 on 2022-10-13 08:45

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название мероприятия')),
                ('photo', models.FileField(upload_to='Events/%Y/%m.%d/', verbose_name='фото мероприятия')),
                ('text', models.TextField(blank=True, verbose_name='текст')),
                ('deta', models.DateTimeField(verbose_name='дата мероприятия')),
            ],
            options={
                'db_table': 'Events',
            },
        ),
        migrations.CreateModel(
            name='OrganizationSector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Сектор организации')),
            ],
            options={
                'db_table': 'OrganizationSector',
            },
        ),
        migrations.CreateModel(
            name='PersonalRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Роли')),
            ],
            options={
                'db_table': 'PersonalRoles',
            },
        ),
        migrations.CreateModel(
            name='StatusStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='статус')),
            ],
            options={
                'db_table': 'StatusStudent',
            },
        ),
        migrations.CreateModel(
            name='TypeDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Направление')),
            ],
            options={
                'db_table': 'TypeDirection',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('roles', models.CharField(blank=True, choices=[('T', 'Преподаватель'), ('S', 'Студент'), ('B', 'Ласточка')], default='S', max_length=2)),
                ('full_name', models.CharField(blank=True, max_length=255, verbose_name='FIO')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Dj_CUser',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='InfoStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('middle_name', models.CharField(max_length=255, verbose_name='Отчество')),
                ('course', models.CharField(choices=[('1', '1-курс'), ('1-1', '1-курс-академ'), ('1-2', '1-курс-магистратура'), ('2', '2-курс'), ('2-1', '2-курс-академ'), ('2-2', '2-курс-магистратура'), ('3', '3-курс'), ('3-1', '3-курс-академ'), ('4', '4-курс'), ('4-1', '4-курс-академ')], default='1', max_length=3, verbose_name='курс')),
                ('photo_student', models.FileField(default='default_img/default.png', upload_to='photo/%Y/%m.%d/', verbose_name='фото студента')),
                ('photo_social_reference', models.FileField(default='default_img/default.png', upload_to='social_reference/', verbose_name='Социальная справка')),
                ('start_social_reference', models.CharField(blank=True, max_length=255, verbose_name='дата назначения справки')),
                ('end_social_reference', models.CharField(blank=True, max_length=255, verbose_name='дата завершения действия справки')),
                ('organization', models.CharField(choices=[('К', 'КДМ'), ('П', 'ПРОФКОМ'), ('С', 'СНО'), ('О', 'Отсутствует')], default='О', max_length=1, verbose_name='организация')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('direction', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='Students.typedirection', verbose_name='Направление')),
                ('organization_sector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Students.organizationsector', verbose_name='Сектор организации')),
                ('student_status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='Students.statusstudent', verbose_name='статус студента')),
            ],
            options={
                'db_table': 'InfoStudent',
            },
        ),
    ]
